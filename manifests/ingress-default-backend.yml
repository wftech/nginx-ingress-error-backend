apiVersion: apps/v1
kind: Deployment
metadata:
  name: default-backend
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: default-backend
    app.kubernetes.io/part-of: ingress-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: default-backend
      app.kubernetes.io/part-of: ingress-nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/name: default-backend
        app.kubernetes.io/part-of: ingress-nginx
      annotations:
        prometheus.io/port: "8081"
        prometheus.io/scrape: "true"
    spec:
      terminationGracePeriodSeconds: 20
      nodeSelector:
        kubernetes.io/os: linux
      containers:
        - name: default-backend
          image: wftech/custom-error:0.01
          imagePullPolicy: Always
          securityContext:
            # www-data
            runAsUser: 101
          env: []
            # set DEBUG=1 to any value to turn debug on
            #- name: DEBUG
            #  value: '1'
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: metrics
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /healthz
              port: 8081
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8081
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: error-backend
  namespace: ingress-nginx
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/name: default-backend
    app.kubernetes.io/part-of: ingress-nginx
